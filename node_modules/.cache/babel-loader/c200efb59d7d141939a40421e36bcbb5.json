{"ast":null,"code":"import { ADJUST_COUNTER } from '../../types';\nexport default function counter(state = {\n  count: 0\n}, action) {\n  switch (action.type) {\n    case ADJUST_COUNTER:\n      return { ...state,\n        count: state.count + 1\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/aylarsoltani/javascript-projects/redux/redux-assignment/fs7-react-redux-typescript/src/redux/reducers/counter.ts"],"names":["ADJUST_COUNTER","counter","state","count","action","type"],"mappings":"AAAA,SAA2CA,cAA3C,QAAiE,aAAjE;AAEA,eAAe,SAASC,OAAT,CACXC,KAAmB,GAAG;AAACC,EAAAA,KAAK,EAAE;AAAR,CADX,EAEXC,MAFW,EAGK;AACZ,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,cAAL;AACI,aAAM,EACF,GAAGE,KADD;AACQC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAD7B,OAAN;;AAGA;AACI,aAAOD,KAAP;AANZ;AAQH","sourcesContent":["import {CounterState, AdjustCounterAction, ADJUST_COUNTER } from '../../types'\n\nexport default function counter(\n    state: CounterState = {count: 0},\n    action: AdjustCounterAction\n    ): CounterState {\n        switch (action.type){\n            case ADJUST_COUNTER:\n                return{\n                    ...state, count: state.count + 1\n                }\n                default:\n                    return state\n        }\n    }"]},"metadata":{},"sourceType":"module"}