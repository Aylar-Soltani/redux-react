{"ast":null,"code":"var _jsxFileName = \"/Users/aylarsoltani/javascript-projects/redux/redux-assignment/fs7-react-redux-typescript/src/pages/CountriyDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CountryDetails() {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  const {\n    allCountries\n  } = useSelector(state => state.country);\n  let filteredCountry = allCountries.filter(country => {\n    return country.name.toLowerCase().includes(name.toLowerCase());\n  }); // if (!country) {\n  //   return <div>Country not found</div>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filteredCountry.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: country.region\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, country.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_s(CountryDetails, \"vsnmTd/FE5zIp0GgKcNkxS9dAZ4=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = CountryDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"sources":["/Users/aylarsoltani/javascript-projects/redux/redux-assignment/fs7-react-redux-typescript/src/pages/CountriyDetails.tsx"],"names":["React","useParams","useSelector","CountryDetails","name","allCountries","state","country","filteredCountry","filter","toLowerCase","includes","map","region"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAUA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,QAAM;AAACC,IAAAA;AAAD,MAAUH,SAAS,EAAzB;AAEA,QAAM;AAACI,IAAAA;AAAD,MAAiBH,WAAW,CAAEI,KAAD,IAAoBA,KAAK,CAACC,OAA3B,CAAlC;AACA,MAAIC,eAAe,GAAEH,YAAY,CAACI,MAAb,CAAqBF,OAAD,IAAa;AACpD,WACIA,OAAO,CAACH,IAAR,CAAaM,WAAb,GAA2BC,QAA3B,CAAoCP,IAAI,CAACM,WAAL,EAApC,CADJ;AAIH,GALsB,CAArB,CAJqC,CAWrC;AACA;AACA;;AAEA,sBACE;AAAA,cACCF,eAAe,CAACI,GAAhB,CAAqBL,OAAD,iBACnB;AAAA,6BACE;AAAA,kBAAIA,OAAO,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,OAAWN,OAAO,CAACH,IAAnB;AAAA;AAAA;AAAA;AAAA,YADD;AADD,mBADF;AAWD;;GA1BqBD,c;UACJF,S,EAEOC,W;;;KAHHC,c","sourcesContent":["import React from 'react'\nimport{ useParams} from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport {AppState, Country } from '../types'\n\n\n        \n        type Id = {\n            name:string\n        }\n\n\nexport default function CountryDetails() {\n    const {name}  = useParams<Id>();\n   \n    const {allCountries} = useSelector((state:AppState) => state.country)\n    let filteredCountry= allCountries.filter((country) => {\n      return (\n          country.name.toLowerCase().includes(name.toLowerCase())\n         \n      )\n  })\n   \n    // if (!country) {\n    //   return <div>Country not found</div>\n    // }\n  \n    return (\n      <>\n      {filteredCountry.map((country: Country) => (\n        <div key ={country.name}>\n          <p>{country.region}</p>\n\n        </div>\n      ))}\n        \n      </>\n    )\n  }\n\n"]},"metadata":{},"sourceType":"module"}