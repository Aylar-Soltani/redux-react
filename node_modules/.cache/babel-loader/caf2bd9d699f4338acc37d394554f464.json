{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './reducers';\nconst initState = {\n  country: {\n    allCountries: [],\n    inCart: []\n  }\n};\nexport default function makeStore(initialState = initState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, thunk];\n  let composeEnhancers = compose;\n\n  if (process.env.NODE_ENV === 'development') {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n    }\n  }\n\n  const store = createStore(createRootReducer(), initialState, composeEnhancers(applyMiddleware(...middlewares)));\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    ;\n    module.hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers').default;\n\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/Users/aylarsoltani/javascript-projects/redux/redux-assignment/fs7-react-redux-typescript/src/redux/store.ts"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","thunk","createRootReducer","initState","country","allCountries","inCart","makeStore","initialState","sagaMiddleware","middlewares","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run","rootSaga","module","hot","accept","nextReducer","require","default","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,OAAOC,iBAAP,MAA8B,YAA9B;AAGA,MAAMC,SAAmB,GAAG;AAE1BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE,EADP;AAEPC,IAAAA,MAAM,EAAC;AAFA;AAFiB,CAA5B;AAQA,eAAe,SAASC,SAAT,CAAmBC,YAAY,GAAGL,SAAlC,EAA6C;AAC1D,QAAMM,cAAc,GAAGT,oBAAoB,EAA3C;AACA,QAAMU,WAAW,GAAG,CAACD,cAAD,EAAiBR,KAAjB,CAApB;AACA,MAAIU,gBAAgB,GAAGZ,OAAvB;;AAEA,MAAIa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAKC,MAAD,CAAgBC,oCAApB,EAA0D;AACxDL,MAAAA,gBAAgB,GAAII,MAAD,CAAgBC,oCAAnC;AACD;AACF;;AAED,QAAMC,KAAK,GAAGpB,WAAW,CACvBK,iBAAiB,EADM,EAEvBM,YAFuB,EAGvBG,gBAAgB,CAACb,eAAe,CAAC,GAAGY,WAAJ,CAAhB,CAHO,CAAzB;AAMAD,EAAAA,cAAc,CAACS,GAAf,CAAmBC,QAAnB;;AAEA,MAAKC,MAAD,CAAgBC,GAApB,EAAyB;AACvB;AAAED,IAAAA,MAAD,CAAgBC,GAAhB,CAAoBC,MAApB,CAA2B,YAA3B,EAAyC,MAAM;AAC9C,YAAMC,WAAW,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAA1C;;AACAR,MAAAA,KAAK,CAACS,cAAN,CAAqBH,WAArB;AACD,KAHA;AAIF;;AAED,SAAON,KAAP;AACD","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport thunk from 'redux-thunk'\n\nimport { AppState } from '../types'\nimport createRootReducer from './reducers'\n\n\nconst initState: AppState = {\n  \n  country: {\n    allCountries: [],\n    inCart:[]\n  }\n}\n\nexport default function makeStore(initialState = initState) {\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares = [sagaMiddleware, thunk]\n  let composeEnhancers = compose\n\n  if (process.env.NODE_ENV === 'development') {\n    if ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    }\n  }\n\n  const store = createStore(\n    createRootReducer(),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  )\n\n  sagaMiddleware.run(rootSaga)\n\n  if ((module as any).hot) {\n    ;(module as any).hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers').default\n      store.replaceReducer(nextReducer)\n    })\n  }\n\n  return store\n}\n"]},"metadata":{},"sourceType":"module"}