{"ast":null,"code":"import { ADD_PRODUCT, REMOVE_PRODUCT } from '../../types';\nexport default function product(state = {\n  inCart: []\n}, action) {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      {\n        const {\n          product\n        } = action.payload;\n\n        if (state.inCart.find(p => p.id === product.id)) {\n          return state;\n        } // Always return new state (e.g, new object) if changed\n\n\n        return { ...state,\n          inCart: [...state.inCart, product]\n        };\n      }\n\n    case REMOVE_PRODUCT:\n      {\n        const {\n          product\n        } = action.payload;\n        const index = state.inCart.findIndex(p => p.id === product.id);\n\n        if (index >= 0) {\n          state.inCart.splice(index, 1);\n          return { ...state,\n            inCart: [...state.inCart]\n          };\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/aylarsoltani/javascript-projects/redux/redux-assignment/fs7-react-redux-typescript/src/redux/reducers/product.ts"],"names":["ADD_PRODUCT","REMOVE_PRODUCT","product","state","inCart","action","type","payload","find","p","id","index","findIndex","splice"],"mappings":"AAAA,SAGEA,WAHF,EAIEC,cAJF,QAKO,aALP;AAQA,eAAe,SAASC,OAAT,CACbC,KAAmB,GAAG;AACpBC,EAAAA,MAAM,EAAE;AADY,CADT,EAIbC,MAJa,EAKC;AACd,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKN,WAAL;AAAkB;AAChB,cAAM;AAAEE,UAAAA;AAAF,YAAcG,MAAM,CAACE,OAA3B;;AACA,YAAIJ,KAAK,CAACC,MAAN,CAAaI,IAAb,CAAmBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASR,OAAO,CAACQ,EAA1C,CAAJ,EAAmD;AACjD,iBAAOP,KAAP;AACD,SAJe,CAKhB;;;AACA,eAAO,EAAE,GAAGA,KAAL;AAAYC,UAAAA,MAAM,EAAE,CAAC,GAAGD,KAAK,CAACC,MAAV,EAAkBF,OAAlB;AAApB,SAAP;AACD;;AAED,SAAKD,cAAL;AAAqB;AACnB,cAAM;AAAEC,UAAAA;AAAF,YAAcG,MAAM,CAACE,OAA3B;AACA,cAAMI,KAAK,GAAGR,KAAK,CAACC,MAAN,CAAaQ,SAAb,CAAwBH,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASR,OAAO,CAACQ,EAA/C,CAAd;;AACA,YAAIC,KAAK,IAAI,CAAb,EAAgB;AACdR,UAAAA,KAAK,CAACC,MAAN,CAAaS,MAAb,CAAoBF,KAApB,EAA2B,CAA3B;AACA,iBAAO,EAAE,GAAGR,KAAL;AAAYC,YAAAA,MAAM,EAAE,CAAC,GAAGD,KAAK,CAACC,MAAV;AAApB,WAAP;AACD;;AACD,eAAOD,KAAP;AACD;;AAED;AACE,aAAOA,KAAP;AArBF;AAuBD","sourcesContent":["import {\n  ProductState,\n  ProductActions,\n  ADD_PRODUCT,\n  REMOVE_PRODUCT,\n} from '../../types'\n\n\nexport default function product(\n  state: ProductState = {\n    inCart: [],\n  },\n  action: ProductActions\n): ProductState {\n  switch (action.type) {\n  case ADD_PRODUCT: {\n    const { product } = action.payload\n    if (state.inCart.find((p) => p.id === product.id)) {\n      return state\n    }\n    // Always return new state (e.g, new object) if changed\n    return { ...state, inCart: [...state.inCart, product] }\n  }\n\n  case REMOVE_PRODUCT: {\n    const { product } = action.payload\n    const index = state.inCart.findIndex((p) => p.id === product.id)\n    if (index >= 0) {\n      state.inCart.splice(index, 1)\n      return { ...state, inCart: [...state.inCart] }\n    }\n    return state\n  }\n\n  default:\n    return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}