{"ast":null,"code":"import { ADJUST_COUNTER } from '../../types';\nexport default function counter(state = {\n  count: 0\n}, action) {\n  switch (action.type) {\n    case ADJUST_COUNTER:\n      return { ...state,\n        count: state.count + 1\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/aylarsoltani/javascript-projects/redux/redux-assignment/fs7-react-redux-typescript/src/redux/reducers/counter.ts"],"names":["ADJUST_COUNTER","counter","state","count","action","type"],"mappings":"AAAA,SAA4CA,cAA5C,QAAkE,aAAlE;AAEA,eAAe,SAASC,OAAT,CACbC,KAAmB,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CADT,EAEbC,MAFa,EAGC;AACd,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,cAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELC,QAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAFhB,OAAP;;AAIF;AACE,aAAOD,KAAP;AAPJ;AASD","sourcesContent":["import { CounterState, AdjustCounterAction, ADJUST_COUNTER } from '../../types'\n\nexport default function counter(\n  state: CounterState = { count: 0 },\n  action: AdjustCounterAction\n): CounterState {\n  switch (action.type) {\n    case ADJUST_COUNTER:\n      return {\n        ...state,\n        count: state.count + 1,\n      }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}