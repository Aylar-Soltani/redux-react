{"ast":null,"code":"import { ADD_INCREMENT } from '../../types';\nexport default function counter(state = {\n  count: 0\n}, action) {\n  switch (action.type) {\n    case ADD_INCREMENT:\n      {\n        return { ...state,\n          count: state.count + 1\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/aylarsoltani/javascript-projects/redux/redux-assignment/fs7-react-redux-typescript/src/redux/reducers/counter.ts"],"names":["ADD_INCREMENT","counter","state","count","action","type"],"mappings":"AAAA,SAAwCA,aAAxC,QAA4D,aAA5D;AAEA,eAAe,SAASC,OAAT,CACXC,KAAmB,GAAG;AAACC,EAAAA,KAAK,EAAE;AAAR,CADX,EAEXC,MAFW,EAGC;AAEZ,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKL,aAAL;AAAoB;AACjB,eAAO,EACC,GAAGE,KADJ;AACWC,UAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AADhC,SAAP;AAGH;;AAED;AACE,aAAOD,KAAP;AARF;AAUH","sourcesContent":["import {CounterState, AddCounterAction, ADD_INCREMENT} from '../../types'\n\nexport default function counter (\n    state: CounterState = {count: 0},\n    action: AddCounterAction\n): CounterState {\n\n    switch (action.type) {\n     case ADD_INCREMENT: {\n        return {\n                ...state, count: state.count + 1\n        }\n    }\n    \n    default:\n      return state  \n    }\n}"]},"metadata":{},"sourceType":"module"}