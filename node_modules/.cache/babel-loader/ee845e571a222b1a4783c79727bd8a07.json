{"ast":null,"code":"var _jsxFileName = \"/Users/aylarsoltani/javascript-projects/redux/redux-assignment/fs7-react-redux-typescript/src/pages/CountriyDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CountriyDetails({\n  country\n}) {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  const currenCountry = useSelector(state => state.currentCountry); // state.country.inCart.find((c) => c.name === country.name)\n  // )\n  // const detailedCountry = country.filter((country:Country) => {\n  //     return country.name ?.toLowerCase().includes(id.toLocaleLowerCase().trim())\n  // })\n  // if (!country) {\n  //     return \n  //         <div> Country not found</div>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [countries.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"name: \", `${country.name}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [country.population, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [country.region, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, country.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Country page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: `${country.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CountriyDetails, \"h3UbJ9QKIZOWk0wpr1rkL74LQuU=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = CountriyDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountriyDetails\");","map":{"version":3,"sources":["/Users/aylarsoltani/javascript-projects/redux/redux-assignment/fs7-react-redux-typescript/src/pages/CountriyDetails.tsx"],"names":["React","useParams","useSelector","CountriyDetails","country","name","currenCountry","state","currentCountry","countries","map","population","region"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAeA,eAAe,SAASC,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAsD;AAAA;;AAEjE,QAAO;AAACC,IAAAA;AAAD,MAAUJ,SAAS,EAA1B;AACA,QAAMK,aAAa,GAAGJ,WAAW,CAAEK,KAAD,IAAkBA,KAAK,CAACC,cAAzB,CAAjC,CAHiE,CAIjE;AACA;AAKA;AACA;AACA;AAQA;AAEA;AACA;AAEA;;AAEA,sBACI;AAAA,eACCC,SAAS,CAACC,GAAV,CAAeN,OAAD,iBACX;AAAA,8BACI;AAAA,6BAAW,GAAEA,OAAO,CAACC,IAAK,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,mBAAID,OAAO,CAACO,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,mBAAIP,OAAO,CAACQ,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,OAAWR,OAAO,CAACC,IAAnB;AAAA;AAAA;AAAA;AAAA,YADH,CADD,eAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVA,eAWA;AAAA,gBAAM,GAAED,OAAO,CAACC,IAAK;AAArB;AAAA;AAAA;AAAA;AAAA,YAXA;AAAA,kBADJ;AAkBH;;GA7CuBF,e;UAEHF,S,EACKC,W;;;KAHFC,e","sourcesContent":["import React from 'react'\nimport{ useParams} from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport {CountryState, Country} from '../types'\n\n\n\n// type NameProps = {name: name[]}\ntype Id = {\n    name: string\n}\ntype State= {\n    currenCountry : CountryState\n}\ntype AllCountriesProps = {countries: Country[]}\ntype DetaildeCountryProps = {country: Country}\n\nexport default function CountriyDetails({country}:AllCountriesProps) {\n\n    const  {name}  = useParams<Id>()\n    const currenCountry = useSelector((state: State) => state.currentCountry)\n    // state.country.inCart.find((c) => c.name === country.name)\n    // )\n\n\n\n\n    // const detailedCountry = country.filter((country:Country) => {\n    //     return country.name ?.toLowerCase().includes(id.toLocaleLowerCase().trim())\n    // })\n\n\n\n\n\n\n\n    // if (!country) {\n\n    //     return \n    //         <div> Country not found</div>\n        \n    // }\n\n    return(\n        <>\n        {countries.map((country:Country) => (\n            <div key= {country.name}>\n                <p>name: {`${country.name}`}</p>\n                {/* <p><Flag flagUrl= {country.flag}/></p> */}\n                <p>{country.population} </p>\n                <p>{country.region} </p>\n            </div>\n        )\n        )}\n        <h2>Country page</h2>\n        <h3>{`${country.name}`}</h3>\n        \n        </>\n    )\n\n\n}\n"]},"metadata":{},"sourceType":"module"}