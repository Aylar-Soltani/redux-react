{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './reducers';\nimport rootSaga from './sagas';\nconst initState = {\n  product: {\n    inCart: []\n  },\n  counter: {\n    count: 0\n  },\n  countries: {\n    all: []\n  }\n};\nexport default function makeStore(initialState = initState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, thunk];\n  let composeEnhancers = compose;\n\n  if (process.env.NODE_ENV === 'development') {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n    }\n  }\n\n  const store = createStore(createRootReducer(), initialState, composeEnhancers(applyMiddleware(...middlewares)));\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    ;\n    module.hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers').default;\n\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/Users/aylarsoltani/javascript-projects/redux/redux-assignment/fs7-react-redux-typescript/src/redux/store.ts"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","thunk","createRootReducer","rootSaga","initState","product","inCart","counter","count","countries","all","makeStore","initialState","sagaMiddleware","middlewares","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run","module","hot","accept","nextReducer","require","default","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,OAAOC,iBAAP,MAA8B,YAA9B;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,MAAMC,SAAmB,GAAG;AAC1BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AADD,GADiB;AAI1BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AADA,GAJiB;AAO1BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,GAAG,EAAE;AADE;AAPe,CAA5B;AAYA,eAAe,SAASC,SAAT,CAAmBC,YAAY,GAAGR,SAAlC,EAA6C;AAC1D,QAAMS,cAAc,GAAGb,oBAAoB,EAA3C;AACA,QAAMc,WAAW,GAAG,CAACD,cAAD,EAAiBZ,KAAjB,CAApB;AACA,MAAIc,gBAAgB,GAAGhB,OAAvB;;AAEA,MAAIiB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAKC,MAAD,CAAgBC,oCAApB,EAA0D;AACxDL,MAAAA,gBAAgB,GAAII,MAAD,CAAgBC,oCAAnC;AACD;AACF;;AAED,QAAMC,KAAK,GAAGxB,WAAW,CACvBK,iBAAiB,EADM,EAEvBU,YAFuB,EAGvBG,gBAAgB,CAACjB,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CAHO,CAAzB;AAMAD,EAAAA,cAAc,CAACS,GAAf,CAAmBnB,QAAnB;;AAEA,MAAKoB,MAAD,CAAgBC,GAApB,EAAyB;AACvB;AAAED,IAAAA,MAAD,CAAgBC,GAAhB,CAAoBC,MAApB,CAA2B,YAA3B,EAAyC,MAAM;AAC9C,YAAMC,WAAW,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAA1C;;AACAP,MAAAA,KAAK,CAACQ,cAAN,CAAqBH,WAArB;AACD,KAHA;AAIF;;AAED,SAAOL,KAAP;AACD","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport thunk from 'redux-thunk'\n\nimport { AppState } from '../types'\nimport createRootReducer from './reducers'\nimport rootSaga from './sagas'\n\nconst initState: AppState = {\n  product: {\n    inCart: [],\n  },\n  counter: {\n    count: 0\n  },\n  countries: {\n      all: []\n  }\n}\n\nexport default function makeStore(initialState = initState) {\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares = [sagaMiddleware, thunk]\n  let composeEnhancers = compose\n\n  if (process.env.NODE_ENV === 'development') {\n    if ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    }\n  }\n\n  const store = createStore(\n    createRootReducer(),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  )\n\n  sagaMiddleware.run(rootSaga)\n\n  if ((module as any).hot) {\n    ;(module as any).hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers').default\n      store.replaceReducer(nextReducer)\n    })\n  }\n\n  return store\n}\n"]},"metadata":{},"sourceType":"module"}