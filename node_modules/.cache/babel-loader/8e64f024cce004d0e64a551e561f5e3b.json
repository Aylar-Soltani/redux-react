{"ast":null,"code":"var _jsxFileName = \"/Users/aylarsoltani/javascript-projects/redux/redux-assignment/fs7-react-redux-typescript/src/pages/CountriyDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountryDetails() {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  const {\n    allCountries\n  } = useSelector(state => state.country);\n  let filteredCountry = allCountries.filter(country => {\n    return country.name.includes(name);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countryDetails\",\n    children: filteredCountry.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"flagEach\",\n        src: country.flag,\n        alt: \"Flag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Country Name:\", country.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Population: \", country.population, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Region: \", country.region]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Languages:\", country.languages.map(lang => lang.name).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, country.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountryDetails, \"IVOeZSt/5hW2k4zWaUBOU++5ckM=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = CountryDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"sources":["/Users/aylarsoltani/javascript-projects/redux/redux-assignment/fs7-react-redux-typescript/src/pages/CountriyDetails.tsx"],"names":["React","useParams","useSelector","CountryDetails","name","allCountries","state","country","filteredCountry","filter","includes","map","flag","population","region","languages","lang","join"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAMA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAWH,SAAS,EAA1B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAmBH,WAAW,CAAEI,KAAD,IAAqBA,KAAK,CAACC,OAA5B,CAApC;AACA,MAAIC,eAAe,GAAGH,YAAY,CAACI,MAAb,CAAqBF,OAAD,IAAa;AACrD,WAAOA,OAAO,CAACH,IAAR,CAAaM,QAAb,CAAsBN,IAAtB,CAAP;AACD,GAFqB,CAAtB;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACGI,eAAe,CAACG,GAAhB,CAAqBJ,OAAD,iBACnB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAEA,OAAO,CAACK,IAAvC;AAA6C,QAAA,GAAG,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,oCAAiBL,OAAO,CAACH,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,mCAAgBG,OAAO,CAACM,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,+BAAYN,OAAO,CAACO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,iCACaP,OAAO,CAACQ,SAAR,CAAkBJ,GAAlB,CAAuBK,IAAD,IAAUA,IAAI,CAACZ,IAArC,EAA2Ca,IAA3C,CAAgD,IAAhD,CADb;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAUV,OAAO,CAACH,IAAlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GArBuBD,c;UACLF,S,EACQC,W;;;KAFHC,c","sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { AppState, Country } from '../types'\n\ntype Id = {\n  name: string\n}\nexport default function CountryDetails() {\n  const { name } = useParams<Id>()\n  const { allCountries } = useSelector((state: AppState) => state.country)\n  let filteredCountry = allCountries.filter((country) => {\n    return country.name.includes(name)\n  })\n  return (\n    <div className=\"countryDetails\">\n      {filteredCountry.map((country: Country) => (\n        <div key={country.name}>\n          <img className=\"flagEach\" src={country.flag} alt=\"Flag\" />\n          <p>Country Name:{country.name}</p>\n          <p>Population: {country.population} </p>\n          <p>Region: {country.region}</p>\n          <p>\n            Languages:{country.languages.map((lang) => lang.name).join(', ')}\n          </p>\n        </div>\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}